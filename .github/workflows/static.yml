# Name of your GitHub Actions workflow
name: Generate and Deploy RSS Link Feed

# Controls when the action will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Runs the workflow on a schedule (e.g., every 6 hours)
  schedule:
    - cron: '0 */6 * * *' # Uses cron syntax

# Sets permissions for the workflow
permissions:
  contents: write # Allows the action to commit changes to the repository
  pages: write    # Allows the action to deploy to GitHub Pages
  id-token: write # Required for deployment authentication

# A workflow run is made up of one or more jobs
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Use the latest version of Ubuntu Linux
    steps:
      # Step 1: Check out your repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # You can change the Python version if needed

      # Step 3: Install Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # Step 4: Run the Python script to generate the XML file
      - name: Run link extractor script
        run: python link_extractor.py
        env:
          # Use the secret you created for the source URL
          SOURCE_RSS_URL: ${{ secrets.KTN_RSS_URL }}

      # Step 5: Configure Git for the commit
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      # Step 6: Commit the generated XML file back to the repository
      - name: Commit and push if changed
        run: |
          git add links_feed.xml
          # The following command exits with 0 if there are no changes,
          # and 1 if there are, which would fail the workflow. We add `|| exit 0`
          # to ensure the workflow continues even if there's nothing to commit.
          git diff --staged --quiet || (git commit -m "Update links_feed.xml" && git push)

      # Step 7: Setup GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Step 8: Upload the generated file as a GitHub Pages artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # This should be the name of the file generated by your script
          path: 'links_feed.xml'

      # Step 9: Deploy the artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
